#version 430 core

layout(location = 0) in int vram_x;
layout(location = 1) in int vram_y;
layout(location = 2) in uint color;

layout(std140, binding = 2) uniform globals {
	bool use_dither;
	uint tex_window_mask_x;
	uint tex_window_mask_y;
	uint tex_window_off_x;
	uint tex_window_off_y;
	int draw_x_off;
	int draw_y_off;
	bool set_mask;
	bool check_mask;
};

out vec3 vertex_color;
out vec2 vram_coords;

void main() {
	float x = float(vram_x + draw_x_off) / 1024.0;
	float y = float(vram_y + draw_y_off) / 512.0;

	x = x * 2 - 1;
	y = y * 2 - 1;

	gl_Position = vec4(x, y, 0.0, 1.0);

	uint r = (color & 0xFF);
	uint g = (color >> 8) & 0xFF;
	uint b = (color >> 16) & 0xFF;

	vertex_color = vec3(
	 float(r), 
	 float(g), 
	 float(b)
	);
	vram_coords = vec2(float(vram_x + draw_x_off), 
	                   float(vram_y + draw_y_off));
}