#version 430 core

layout(binding = 0) uniform sampler2D vram_tex;
layout(binding = 3, r8) uniform restrict coherent image2D mask_image;

uniform bool mask_enable;

in vec2 copy_source;
in vec2 copy_dest;
out vec4 color;

void main() {
    uint x = uint(copy_dest.x * 1024.0);
    uint y = uint(copy_dest.y * 512.0);
    if(mask_enable) {
		if(imageLoad(mask_image, ivec2(x, y)).r == 1.0) {
			discard;
		}
	}

    color = texture(vram_tex, copy_source);

	imageStore(mask_image, ivec2(x, y), vec4(color.a, 0.0, 0.0, 0.0));
}