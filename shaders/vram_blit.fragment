#version 430 core

layout(binding = 0) uniform sampler2D vram;
layout(binding = 1) uniform sampler2D blit_texture;

layout(binding = 3, r8) uniform restrict coherent image2D mask_image;

uniform bool mask_enable;
uniform bool set_mask;

in vec2 sample_coords;

out vec4 color;

void main() {
    uint x = uint(sample_coords.x * 1024.0);
    uint y = uint(sample_coords.y * 512.0);
    if(mask_enable) {
		if(imageLoad(mask_image, ivec2(x, y)).r == 1.0) {
			discard;
		}
	}

    color = texture(blit_texture, sample_coords);

    if(set_mask) {
        color.a = 1.0;
    }

    imageStore(mask_image, ivec2(x, y), vec4(color.a, 0.0, 0.0, 0.0));
}