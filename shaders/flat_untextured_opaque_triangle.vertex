#version 430 core

layout(location = 0) in int vram_coords_x;
layout(location = 1) in int vram_coords_y;
layout(location = 2) in uvec3 color;

layout(std140, binding = 2) uniform globals {
	bool use_dither;
	uint tex_window_mask_x;
	uint tex_window_mask_y;
	uint tex_window_off_x;
	uint tex_window_off_y;
	int draw_x_off;
	int draw_y_off;
	bool set_mask;
	bool check_mask;
};

flat out uvec3 in_color; 
out vec2 coords;

void main() {
	float x = float(vram_coords_x + draw_x_off) / 1024.0;
	float y = float(vram_coords_y + draw_y_off) / 512.0;

	x = x * 2 - 1;
	y = y * 2 - 1;

	gl_Position = vec4(x, y, 0.0, 1.0);
	in_color = color;
	coords = vec2(float(vram_coords_x + draw_x_off), 
				  float(vram_coords_y + draw_y_off));
}